@{
    ViewData["Title"] = "Người đóng góp";
    var createOrUpdateURL = "/admin/contributor/createorupdate";
    var deleteApi = "/api/contributor/delete-multiple";
}

<div class="row" id="breadcrumb">
    <div class="col-12">
        <div class="page-title-box d-sm-flex align-items-center justify-content-between">
            <h4 class="mb-sm-0">@ViewData["Title"]</h4>
            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item active">@ViewData["Title"]</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div id="main-content">
    <div class="row main-body">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive table-card">
                        @(
                            Html.Kendo().Grid<Contributor>()
                            .Name("grid_Contributor_Index")
                            .Height("600px")
                            .ToolBar(t =>
                            {
                                t.Custom().ClientTemplate(Html.Kendo().Template().AddHtml(SystemVariable.htmlSearchToolbar));
                                t.Spacer();
                                t.Custom().ClientTemplate(Html.Kendo().Template().AddComponent(c => c
                                .Button().Name("btnDelete").Content("Xóa")
                                .IconClass("ri-delete-bin-5-line align-bottom me-1")
                                .HtmlAttributes(new { style = "display: none", @class = "btn-delete" })));
                                t.Custom().ClientTemplate(Html.Kendo().Template().AddComponent(c => c
                                .Button().Name("btnCreate").Content("Thêm Mới").Icon("plus")));
                                t.Excel().Text("Xuất Excel");
                            })
                            .Columns(columns =>
                            {
                                columns.Select().Width(28);
                                columns.Template("<div style='text-align:center;'>#= getRecordNumber() #</div>")
                                .Width(50).ClientHeaderTemplate("<div style='text-align:center;'>#</div>");
                                columns.Command(command =>
                                {
                                    command.Custom("btnEditRow").IconClass("ri-pencil-line").Text(" ")
                                .HtmlAttributes(new { title = "Cập nhật", @class = "k-button-solid-primary" })
                                .Click("onEditRow");
                                    command.Custom("btnDeleteRow").IconClass("ri-delete-bin-5-line").Text(" ")
                                .HtmlAttributes(new { title = "Xóa" })
                                .Click("onDeleteRow");
                                }).Width(150);
                                columns.Bound(p => p.Id).Title("Id").Hidden();
                                columns.Bound(p => p.Name).Title("Tên đóng góp").Width(200);
                                columns.Bound(p => p.Slug).Title("Slug").Width(150);
                                columns.Bound(p => p.Description).Title("Ghi chú").Width(250);
                                columns.Bound(p => p.Type).Title("Loại đóng góp").Width(150);
                                columns.Bound(p => p.CreatedAt).Title("Ngày tạo").Format(SystemVariable.formatDateTime).Width(120);
                            })
                            .Pageable(p => p.Input(true).Numeric(true).Refresh(true).Info(true))
                            .Scrollable().Excel(e => e.AllPages(true))
                            .Sortable()
                            .Filterable()
                            .Reorderable(r => r.Columns(true))
                            .Events(e => e.DataBinding("onDataBindingRecorNumber").Change("onShowButtonToolbar"))
                            .Selectable(s => s.Mode(GridSelectionMode.Multiple).Type(GridSelectionType.Row))
                            .Resizable(r => r.Columns(true))
                            .ColumnMenu(menu => menu.ComponentType("classic").Filterable(true))
                            .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(50)
                            .Read(r => r.Url("/api/contributor/grid")))
                            )
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function onEditRow(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            openNewWindow(dataItem.Id, '@createOrUpdateURL', "Cập nhật đóng góp", "700px");
        }
        function onDeleteRow(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            confirmDelete([dataItem.Id], '@deleteApi', "grid_Contributor_Index");
        }
        $("#grid_Contributor_Index").on("click", "[id='btnCreate']", function () {
            openNewWindow(0, '@createOrUpdateURL', "Tạo mới đóng góp", "700px");
        });
        $("#grid_Contributor_Index").on("click", "[id='btnDelete']", function () {
            DeleteRowInGrid('@deleteApi', "grid_Contributor_Index", "onShowButtonToolbar");
        });
        $("#grid_Contributor_Index").on("dblclick", "tr[data-uid]", function () {
            var grid = $("#grid_Contributor_Index").data("kendoGrid");
            var id = grid.dataSource.getByUid(this.getAttribute("data-uid")).Id;
            openNewWindow(id, '@createOrUpdateURL', "Cập nhật đóng góp", "700px");
        });
    </script>
</div>
