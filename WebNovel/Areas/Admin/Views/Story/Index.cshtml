@using WebNovel.Models
@{
    ViewData["Title"] = "Quản lý truyện";
}

<h2 class="mb-3">Danh sách truyện</h2>

<p>
    <a href="/Admin/Story/Create" class="k-button k-primary">
        <i class="k-icon k-i-plus"></i> Thêm truyện mới
    </a>
</p>

@(Html.Kendo().Grid<Story>()
    .Name("StoryGrid")
    .Columns(columns =>
    {
        columns.Bound(s => s.Title).Title("Tiêu đề");
        columns.Bound(s => s.AuthorName).Title("Tác giả");
        columns.Bound(s => s.Status).Title("Tình trạng")
               .ClientTemplate("#= statusText(Status) #");
        columns.Bound(s => s.CreatedAt).Format("{0:dd/MM/yyyy}").Title("Ngày tạo");
        columns.Command(cmd =>
        {
            cmd.Custom("Edit").Click("onEdit").Text("Sửa");
            cmd.Custom("Delete").Click("onDelete").Text("Xóa");
        }).Title("Thao tác").Width(200);
    })
    .Pageable()
    .Sortable()
    .DataSource(ds => ds.Ajax()
        .Read("GetAll", "Story", new { area = "Admin" })
    )
)

<script>
    function statusText(status) {
        switch (status) {
            case 0: return "Đang cập nhật";
            case 1: return "Tạm dừng";
            case 2: return "Hoàn thành";
            default: return "Không rõ";
        }
    }

    function onEdit(e) {
        const data = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = `/Admin/Story/Edit/${data.Id}`;
    }

    function onDelete(e) {
        const data = this.dataItem($(e.currentTarget).closest("tr"));
        if (confirm("Bạn chắc chắn muốn xóa truyện '" + data.Title + "'?")) {
            window.location.href = `/Admin/Story/Delete/${data.Id}`;
        }
    }
</script>
